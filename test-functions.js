// Test des fonctions Netlify en local
async function testNetlifyFunctions() {
  const baseUrl = 'http://localhost:8889/.netlify/functions';
  
  console.log('üß™ Test des fonctions Netlify...');
  
  // Test de generateProgression
  try {
    console.log('üìù Test de generateProgression...');
    const progressionResponse = await fetch(`${baseUrl}/generateProgression`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        key: 'C',
        style: 'jazz',
        complexity: 'intermediate'
      })
    });
    
    if (progressionResponse.ok) {
      const progressionData = await progressionResponse.json();
      console.log('‚úÖ generateProgression fonctionne:', progressionData);
    } else {
      console.error('‚ùå generateProgression √©chou√©:', progressionResponse.status, await progressionResponse.text());
    }
  } catch (error) {
    console.error('‚ùå Erreur generateProgression:', error);
  }
  
  // Test de generateSubstitutions
  try {
    console.log('üìù Test de generateSubstitutions...');
    const substitutionsResponse = await fetch(`${baseUrl}/generateSubstitutions`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chord: 'Cmaj7',
        key: 'C',
        style: 'jazz'
      })
    });
    
    if (substitutionsResponse.ok) {
      const substitutionsData = await substitutionsResponse.json();
      console.log('‚úÖ generateSubstitutions fonctionne:', substitutionsData);
    } else {
      console.error('‚ùå generateSubstitutions √©chou√©:', substitutionsResponse.status, await substitutionsResponse.text());
    }
  } catch (error) {
    console.error('‚ùå Erreur generateSubstitutions:', error);
  }
}

// Ex√©cuter les tests quand la page est charg√©e
if (typeof window !== 'undefined') {
  window.testNetlifyFunctions = testNetlifyFunctions;
  console.log('üîß Fonctions de test disponibles. Ex√©cutez testNetlifyFunctions() dans la console.');
}